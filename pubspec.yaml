name: xinshijieapp
description: 新世界app版

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.2 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  #一个列表，其中包含以编程方式滚动到项目的辅助方法。
  scrollable_positioned_list: ^0.3.5
  flutter_svg: ^1.1.6
  google_fonts: ^4.0.3
  #
  flutter_vector_icons: ^2.0.0
  #访问后台
  dio: ^5.0.1
  # lru缓存库
  dio_cache_interceptor: ^3.4.0
  #状态管理
  provider: ^6.0.5
  #小工具包
  nb_utils: ^5.0.5  #缓存图片
  cached_network_image: ^3.2.3
  #MobX 是一个用于响应式管理应用程序状态的库。使用可观察对象、动作和反应的力量来增强您的 Dart 和 Flutter 应用程序
#  mobx: ^2.1.4
#  #提供 Observer widget，它监听 observables 并在发生变化时自动重建。
#  flutter_mobx: ^2.0.6+5
  #信息推送
  onesignal_flutter: ^3.4.2
  #数据持久化
  shared_preferences: ^2.0.15
  html: ^0.15.2
  url_launcher: ^6.1.10
  #Dart 中的统一形式表示。 Formz 旨在以通用方式简化表单表示和验证。
  formz: ^0.5.0+1
  json_serializable: ^6.6.1
  #为了能够在Dart中比较对象，通常需要重写==操作符和hashCode。
  #它不仅冗长乏味，而且如果不这样做，就会导致代码的效率低下，不能像我们预期的那样运行。
  #默认情况下，如果两个对象是同一个实例，==返回true。
  equatable: ^2.0.5
  #对十进制进行计算,防止失去精度
  decimal: ^2.3.1
  rational: ^2.2.1
  #加解密
  encrypt: ^5.0.1
  #uuid
  uuid: ^3.0.7
  bruno: ^3.3.0
  #上标文字图案
  badges: ^3.0.2
  #轮播
  smooth_page_indicator: ^1.0.1
  # add this line to your dependencies
  fluttertoast: ^8.2.1
  #下拉刷新
  easy_refresh: ^3.3.1
  flutter_mobx: ^2.0.6+5
  get: ^4.6.5
  #富文本
  flutter_quill: ^7.0.1
  #flutter_quill demo
  universal_html: ^2.0.8

    # The following adds the Cupertino Icons font to your application.
    # Use with the CupertinoIcons class for iOS style icons.
  #flutter_quill demo
  path_provider: ^2.0.9
  #flutter_quill demo
  filesystem_picker: ^3.1.0
  #flutter_quill demo
  file_picker: ^5.2.2
  #flutter_quill demo
  flutter_quill_extensions:
    path: flutter_quill_extensions
  #将外部滚动(Header部分)和内部滚动(Body部分)联动起来。里面滚动不了，滚动外面。外面滚动没了，滚动里面
#  扩展NestedScrollView来修复下面的问题
#  1. pinned的Header问题
#  2. body里面TabView列显示滚动同步，交互影响的问题
#  3.在NestedScrollView的body中不通过设置ScrollController(设置了会跟随内部Controller冲突)来完成下拉刷新，增量加载，滚动到顶部
  extended_nested_scroll_view: ^6.0.0
  #可删除.测试用
  ff_annotation_route_library: ^3.0.0
  #加载更多列表 可删除.测试用
  loading_more_list: ^5.0.3
  #自定义下拉刷新动画. 可删除.测试用
  pull_to_refresh_notification: ^3.0.0
  #可删除.测试用
  #强大的官方 Image 扩展组件, 支持加载以及失败显示，缓存网络图片，缩放拖拽图片，图片浏览(微信掘金效果)，滑动退出页面(微信掘金效果)，
  #编辑图片(裁剪旋转翻转)，保存，绘制自定义效果等功能
  extended_image: ^7.0.2
  #可删除.测试用
  easy_refresh_skating: ^1.0.2
  #可删除.测试用
  easy_refresh_squats: ^1.0.2
  #可删除.测试用
  flutter_localization: ^0.1.10
  #可删除.测试用
  flutter_spinkit: ^5.1.0
  #可删除.测试用
  carousel_slider: ^4.2.1
  #可删除.测试用
  qr_flutter: ^4.0.0
  #可删除.测试用
  easy_refresh_bubbles: ^1.0.0
  #可删除.测试用
  easy_refresh_halloween: ^1.0.2
  #可删除.测试用
  easy_refresh_space: ^1.0.2

#  google_mobile_ads: ^2.3.0
  #缓存互联网上的图片
dev_dependencies:
  flutter_test:
    sdk: flutter
  #建筑价值提供： 不可变值类型； EnumClass，行为类似于枚举的类； JSON 序列化。
  #这个工具，转为迅速根据接口或者说json串，迅速生成一个类
  json_serializable:
  built_value: ^8.4.2
  built_value_generator: ^8.4.2
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
  very_good_analysis: ^3.1.0
# The following section is specific to Flutter packages.
  mocktail: ^0.3.0
  equatable: ^2.0.5
  #显示html
#  flutter_widget_from_html: ^0.10.0
  flutter_html_all: ^3.0.0-alpha.6
  #视频播放
  flutter_meedu_videoplayer: ^3.2.0
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
     - images/
     - images/icons/
     - fonts/
     - assets/
     - assets/mapStyles/
     - images/classification/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
  fonts:
    - family: monospace
      fonts:
        - asset: assets/fonts/MonoSpace.ttf
    - family: serif
      fonts:
        - asset: assets/fonts/Serif.ttf
    - family: sans-serif
      fonts:
        - asset: assets/fonts/SansSerif.ttf
    - family: ibarra-real-nova
      fonts:
        - asset: assets/fonts/IbarraRealNova-Regular.ttf
    - family: square-peg
      fonts:
        - asset: assets/fonts/SquarePeg-Regular.ttf
    - family: nunito
      fonts:
        - asset: assets/fonts/Nunito-Regular.ttf
    - family: pacifico
      fonts:
        - asset: assets/fonts/Pacifico-Regular.ttf
    - family: roboto-mono
      fonts:
        - asset: assets/fonts/RobotoMono-Regular.ttf
