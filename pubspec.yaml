name: xinshijieapp
description: 新世界app版

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.2 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  #一个列表，其中包含以编程方式滚动到项目的辅助方法。
  scrollable_positioned_list: ^0.3.5
  flutter_svg: ^1.1.6
  google_fonts: ^3.0.1
  #
  flutter_vector_icons: 2.0.0
  #访问后台
  dio: ^4.0.6
  # lru缓存库
  dio_cache_interceptor: ^3.3.1
  #状态管理
  provider: ^6.0.4
  #小工具包
  nb_utils: ^4.6.25
  #缓存图片
  cached_network_image: ^3.2.2
  #MobX 是一个用于响应式管理应用程序状态的库。使用可观察对象、动作和反应的力量来增强您的 Dart 和 Flutter 应用程序
  mobx: ^2.1.3
  #提供 Observer widget，它监听 observables 并在发生变化时自动重建。
  flutter_mobx: ^2.0.6+5
  #信息推送
  onesignal_flutter: ^3.4.2
  #数据持久化
  shared_preferences: ^2.0.15
  html: ^0.15.1
  url_launcher: ^6.1.7
  #Dart 中的统一形式表示。 Formz 旨在以通用方式简化表单表示和验证。
  formz: ^0.4.0
  json_serializable: ^6.5.4
  #为了能够在Dart中比较对象，通常需要重写==操作符和hashCode。
  #它不仅冗长乏味，而且如果不这样做，就会导致代码的效率低下，不能像我们预期的那样运行。
  #默认情况下，如果两个对象是同一个实例，==返回true。
  equatable: ^2.0.5
  #弹出框
  bot_toast: ^4.0.3
  #对十进制进行计算,防止失去精度
  decimal: ^2.3.1
  rational: ^2.2.1
  #加解密
  encrypt: ^5.0.1
  #显示html内容
  flutter_html: ^3.0.0-alpha.6
  flutter_html_all: ^3.0.0-alpha.6
  #uuid
  uuid: ^3.0.7
  bruno: ^3.1.0
dev_dependencies:
  flutter_test:
    sdk: flutter
  #建筑价值提供： 不可变值类型； EnumClass，行为类似于枚举的类； JSON 序列化。
  #这个工具，转为迅速根据接口或者说json串，迅速生成一个类
  json_serializable:
  built_value: ^8.4.2
  built_value_generator: ^8.4.2
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
  very_good_analysis: ^3.1.0
# The following section is specific to Flutter packages.
  mocktail: ^0.3.0
  equatable: ^2.0.5

flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
     - images/
     - fonts/
     - assets/
     - assets/mapStyles/
     - images/classification/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
